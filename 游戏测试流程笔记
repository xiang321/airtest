游戏测试流程
1.需求分析
2.需求评审
3.测试计划
4.用例设计
5.编写用例
6.执行用例
7.提交bug
8.回归bug
9.编写报告
游戏测试用例常用方法：等价类，边界值，因果图&判定表
等价类：
指的是一个输入集合内，任何输入数据对于输出的验证来讲都是等效的，此时我们就可以选取少量代表性的测试数据来代表整体数据。
有效等价类：是对于输出来讲有意义的输入集合，可以验证程序的正常功能和流程。
无效等价类：是对于输出无意义的输入组合，用于验证非正常流程输入对输出的影响。
边界值：
边界值：对输入或输出的边界值进行分析的一种方法。
边界值的确定：一般选取正好等于，刚刚小于和刚刚大雨3中情况作为测试数据。
通常使用的范畴：数值测试，字符串测试，数据类型测试等。
因果图&判定表：
因果图：简单的来说就是输入与输出之间因果关系的一种关系图。
判定表：可以通过因果图生成的一种结果判定表格。
因果图常常与判定表一起使用，通过因果图生成判定表，通过判定表来书写测试用例。
用例编写注意事项。
输入条件要单一明确，尽量不用容易引起误解的词，比如：可能，大概等。
输出要可判断且明确。最好不用“显示正确”这种词汇。
测试步骤要可执行。
保持尽量高的覆盖度。
能抽象的尽量抽象出来，避免无意义的冗余。

基于黑盒测试所产生的测试方案属于高端测试，主要是在操作层面上对游戏进行测试；
基于白盒测试所产生的测试方案属于低端测试，是对各种设计细节方面的测试。
黑盒测试中不需要知道里面是如何运行的，也不需要知道内部算法是如何设计的，只需要看游戏中战斗和情节是否按照要求来进行的即可。
而白盒测试则是需要知道内部算法，例如A打了B一下，按照A和B现在的状态应该掉多少血量之类的问题都属于白盒测试。
在测试方案中需要把黑盒测试与白盒测试有效的结合在一起。
根据游戏开发过程，测试大致可以分成单元测试，模块测试，总体测试和产品测试几个部分。
单元测试主要集中在细节部分，主要是在游戏引擎开发过程阶段对引擎的构造能力和完善性进行检测。
模块测试是在游戏的开发过程中按照阶段进行的，每当一个模型产生后就要对该部分进行一次集中测试，从而保证系统的坚固和完善。
模块之间的接口测试也属于该部分的工作如每个游戏模块之间如何实现过度，数据如何进行交换都要进行严格的测试。
总体测试属于比较高层的测试，在游戏的DEMO基本完成后，要从宏观上把整个游戏合成在一起。
产品测试往往也会伴随一些市场活动。

在测试中，主要是对以下方面进行测试。
压力测试：包括服务器的承载能力、网络运行环境、数据库细分、并发量、最大负载等等。
内容测试：一.是游戏本身剧情、副本内容、交易系统等等；
          二.是玩家交互，BUG的调整。
游戏测试的目的：发现游戏中存在的缺陷。